#define LOG_OUT 1 // use the log output function
#define FFT_N 256 // set to 256 point fft

#include <FFT.h> // include the library
#include <avr/io.h>
#include <avr/interrupt.h>
#include "talkie.h"

const int inputPin = 2; 
const int ledPin = 5;

long startTime = 0;

/* 안녕하세요. */
const uint8_t hello[] PROGMEM = {0x00,0xAE,0x4A,0xD5,0xD8,0x53,0xA9,0x2E,0x2B,0x55,0x93,0x2A,0xA5,0x7A,0xAC,0xDC,0x44,0x23,0x9D,0xCA,0xB2,0x52,0x24,0xB3,0x32,0xDA,0xC1,0x06,0x41,0x2B,0x4B,0x91,0x32,0x1B,0x7C,0x33,0x94,0x50,0x4B,0x4C,0xF0,0x45,0x20,0x9A,0x2E,0xD3,0xC1,0x17,0x26,0x0B,0x27,0x41,0x01,0xAD,0x2A,0x95,0xE8,0x8F,0x5C,0x2A,0xF5,0x6E,0x13,0x72,0x32,0xA7,0x54,0xAB,0xD5,0xF0,0x49,0x8D,0x0E,0x8B,0xD0,0xC0,0x2B,0x55,0xAE,0x58,0xCA,0x0A,0xB7,0x14,0xC7,0x20,0xEB,0x0C,0x9A,0x52,0x50,0x5C,0xA5,0x27,0xC8,0x48,0x55,0x08,0x92,0x8A,0xA0,0x27,0xF5,0x2E,0x88,0x33,0x82,0x9E,0x2C,0xDA,0x10,0xF1,0x08,0x7A,0x8A,0x68,0x4D,0x34,0x4A,0x68,0x2B,0xB9,0x13,0x8B,0x4A,0x32,0x2C,0x27,0x2A,0x2C,0xB4,0xC5,0x01,0x40,0xA8,0xB0,0xD5,0x9C,0x08,0x22,0xC3,0x08,0x86,0xA2,0xB2,0x09,0x2F,0x3B,0x58,0xAE,0x8E,0x12,0x3C,0x9D,0xE1,0x7A,0x2F,0xD5,0x9E,0x42,0x86,0x6B,0xA3,0x66,0x45,0x08,0x19,0xAE,0xCD,0x6E,0x19,0x29,0x64,0xB8,0xBE,0x38,0x7B,0xA5,0x91,0x61,0x85,0xEE,0x64,0x53,0x42,0x9B,0x11,0x97,0x93,0x6E,0x81,0x6B,0x6A,0x9C,0x85,0x3C,0x45,0xBC,0x2A,0xA9,0x08,0xBD,0x80,0xA6,0xC0,0x87,0xC2,0x37,0x07,0xD9,0x84,0xEE,0x72,0x59,0x15,0xEC,0x1C,0xBE,0x28,0x40,0x53,0xE8,0x37,0xF4,0xA8,0x02,0x4F,0x79,0xDF,0xE0,0x01,0xC0,0xFF};
/* 안녕하세요. 강형원님. */
const uint8_t khw[] PROGMEM = {0x00,0x00,0x00,0xA1,0x08,0x9E,0xD9,0xD4,0xE5,0xAD,0x22,0x44,0x55,0xD5,0x80,0xBB,0xD4,0x94,0x44,0xD5,0x8A,0x6C,0x51,0x99,0x17,0xB7,0x4E,0xBA,0xA6,0x04,0xB5,0x16,0xD5,0x14,0xB1,0x02,0x9C,0x5A,0x42,0x4D,0xAB,0x72,0xD0,0x67,0x52,0x50,0x7E,0x4A,0x81,0xAE,0x9A,0x16,0xA1,0x23,0x11,0xC2,0xBC,0x5B,0x8D,0xAC,0x84,0xAB,0xF0,0x4C,0x09,0x32,0x12,0xE6,0x4A,0x34,0xBD,0x70,0x49,0x50,0x0E,0xB6,0xF2,0xA2,0x26,0x05,0x3B,0x9C,0xBC,0x83,0x98,0x14,0xCC,0x6A,0x88,0x88,0x15,0x52,0xB0,0x5C,0x29,0x2A,0x68,0x4A,0x69,0x0F,0xD2,0xF1,0xA0,0x2D,0x53,0xD9,0xC9,0xDA,0x83,0x8E,0xDC,0x24,0x15,0xAF,0x08,0xDA,0x0A,0x9E,0x2C,0x22,0x42,0xA8,0xD1,0xC1,0xAE,0x0C,0x13,0x61,0xC4,0x04,0xDF,0x0D,0xA4,0xA5,0x12,0x0B,0x7C,0x11,0xB2,0xA2,0x8A,0x6C,0xF0,0x19,0x4D,0x4B,0x0A,0x73,0xC0,0x2F,0x54,0xB6,0x24,0xC6,0x05,0x73,0xC3,0x89,0x94,0x3B,0x17,0xD4,0xC9,0x60,0x62,0xEE,0x5C,0x50,0xBA,0x43,0x88,0xB9,0xF1,0x40,0xAB,0x0E,0x41,0xE5,0xC2,0x07,0x2F,0x5A,0x51,0xD2,0x12,0x1F,0x7C,0x0F,0x85,0x92,0x83,0x7C,0xF0,0x3D,0x99,0x52,0x0C,0x0A,0xC0,0x77,0x57,0x4C,0xB1,0x28,0x04,0x3F,0x82,0x21,0xED,0xA0,0x10,0xFC,0x52,0x81,0xB0,0x0C,0x00,0xF0,0xFF};
/* 안녕하세요. 김가연님. */
const uint8_t kgy[] PROGMEM = {0x00,0x00,0x00,0x5C,0xC2,0x71,0xEF,0x2A,0x0B,0x49,0x29,0x88,0xDB,0x6A,0x48,0xDD,0x64,0xE0,0x44,0x19,0x41,0x3D,0x91,0x81,0x17,0x03,0x1C,0x4E,0x44,0x06,0x5E,0x2C,0x98,0xBB,0x14,0x19,0x38,0x75,0x60,0xE1,0x4A,0xA4,0xE0,0xC5,0x80,0xA7,0x2B,0x92,0x82,0xEF,0x81,0x54,0x49,0x5D,0x82,0x23,0x77,0xBB,0x4A,0x6E,0x31,0xCF,0x51,0x69,0x22,0xE4,0xC4,0xC1,0x6A,0x44,0x66,0x90,0x13,0x27,0xCF,0x6E,0xD5,0x42,0x6E,0x7C,0xE2,0xE8,0x30,0xBC,0x53,0xF0,0x8A,0x83,0xA5,0xAC,0x0E,0xC1,0x2B,0x09,0x86,0xA2,0x2A,0x88,0xAC,0x2C,0x18,0x89,0x4A,0x17,0xB2,0xF3,0xA1,0x69,0xA7,0x51,0x11,0x42,0x83,0x09,0x4A,0x54,0xAA,0x91,0x27,0x36,0xF8,0x2E,0x4C,0x61,0x0D,0x39,0xE0,0xAB,0x90,0x36,0x5D,0x64,0x83,0xCF,0x24,0x56,0x52,0x91,0x03,0x3E,0x83,0x7B,0xCA,0x61,0x0E,0xF8,0xC5,0xC4,0x91,0xD4,0xB8,0x60,0x6C,0x18,0x89,0x7A,0xE7,0x82,0x3A,0x15,0x42,0xCC,0x9D,0x0B,0x6A,0x57,0x0A,0xAA,0x37,0x1E,0x18,0xD5,0xC1,0xE0,0x8E,0xF9,0xE0,0x47,0x0B,0x6A,0x12,0xE2,0x83,0xEF,0x21,0x94,0x52,0x91,0x0F,0x7E,0x24,0x63,0x4A,0x41,0x01,0xF8,0x11,0x02,0x69,0x15,0x85,0xE0,0x87,0x33,0x44,0x5C,0x14,0x82,0xDF,0xAA,0x60,0x71,0x00,0x00,0xFF};
/* 안녕하세요. 이전우님. */
const uint8_t ljw[] PROGMEM = {0x00,0x00,0x44,0x03,0xF3,0x13,0x98,0xB4,0x2B,0x0D,0x8C,0x2F,0x64,0x62,0x2F,0x35,0xA1,0x81,0x73,0x41,0x82,0xCC,0x91,0x0A,0x7E,0x33,0x09,0xF9,0x07,0x95,0x70,0x74,0x1D,0x2E,0x26,0x4B,0x4A,0xDB,0x84,0x25,0x11,0x59,0xB1,0xF4,0xED,0xB6,0x26,0x68,0xC5,0xC6,0x85,0xEA,0xBA,0xE1,0x11,0xB3,0x10,0xEA,0x1D,0x42,0x42,0x0C,0x46,0x85,0xA5,0x0B,0x13,0x31,0xF8,0xD5,0x60,0x61,0x47,0xC5,0xE0,0x47,0x61,0x39,0xD5,0x90,0x80,0x65,0xA1,0xE9,0xC4,0x52,0x06,0xBA,0xBB,0x87,0x09,0x0B,0x0A,0x68,0x95,0x26,0x6E,0x4C,0xE9,0xE0,0x56,0x33,0xB9,0x39,0x62,0x82,0xAF,0x0A,0xDA,0x52,0x90,0x05,0xBE,0x30,0x69,0xD3,0x45,0x36,0xF8,0x8C,0x6A,0x25,0x15,0xDB,0xC2,0x01,0x7F,0x98,0xD9,0x92,0x1A,0x17,0xCC,0x0D,0x23,0x52,0x6F,0x5C,0xD0,0x27,0x43,0x50,0xBD,0x75,0x8D,0x07,0x46,0x97,0x33,0xBA,0x67,0x3E,0xF8,0x91,0x4C,0x96,0x18,0x79,0xE0,0x9B,0x2B,0xA6,0x15,0xEC,0xA3,0x00,0xFC,0x08,0x81,0x88,0x8A,0x43,0x14,0x81,0xDF,0xA6,0xA0,0xB1,0x01,0xE0,0xFF};
/* 안녕하세요. 전한별님. */
const uint8_t jhb[] PROGMEM = {0x00,0x00,0x00,0x26,0x1A,0xD0,0x5C,0x45,0x83,0xB4,0x4C,0xB8,0x12,0xA9,0x10,0xBA,0x72,0x6B,0x4B,0x25,0xD3,0x48,0x2B,0x64,0x70,0xD5,0x4E,0xA1,0xA1,0x00,0xD9,0xDD,0x3A,0x45,0xAF,0xCC,0x07,0x65,0xA9,0x34,0x73,0xD2,0xE8,0x9C,0x39,0x23,0xC8,0x49,0x83,0x09,0x96,0x8C,0x20,0x2B,0x55,0x26,0x44,0x2B,0x02,0x87,0x14,0xD4,0xF2,0xA8,0x08,0xCC,0x12,0xF0,0x55,0xD9,0xD2,0x2A,0x4A,0xC1,0x27,0x0A,0x6F,0xBB,0x80,0x32,0xF0,0x57,0x05,0xC5,0xAD,0xC9,0x40,0xA9,0x0C,0x43,0x61,0x2D,0xE3,0xBE,0xB2,0x9B,0x05,0x8F,0x5C,0xDB,0x8A,0x5E,0x35,0xB4,0x24,0xE7,0x22,0xBA,0xCD,0xD0,0x50,0x6C,0xF0,0xEC,0x0A,0x43,0x4D,0x53,0xC1,0x26,0x2B,0x08,0x27,0x8A,0x65,0x1F,0x2F,0x01,0x1B,0x68,0x5C,0x63,0x32,0x14,0xA8,0x63,0xC0,0xAA,0x2A,0x23,0xA2,0x8A,0x05,0x67,0xC3,0x05,0xA8,0x09,0x17,0xEC,0xAA,0x22,0xA0,0xEF,0x5C,0x50,0xAB,0x47,0x80,0xBA,0x73,0x41,0xEE,0x1A,0x03,0xEA,0xC6,0x03,0xAD,0xAA,0x18,0x94,0x0B,0x1F,0xBC,0x6A,0x03,0x4A,0x86,0x7C,0xF0,0x23,0x18,0xD2,0x0A,0xF6,0x51,0x00,0x7E,0x14,0x71,0xD2,0xC1,0x01,0x0A,0xC1,0x8F,0x24,0x28,0xB9,0x28,0x02,0xBF,0x5C,0xC0,0xAD,0x00,0xC0,0xFF};
/* 안녕하세요. 정기평님. */
const uint8_t jkp[] PROGMEM = {0x00,0x00,0x00,0x29,0xE3,0xB2,0x55,0x32,0xCC,0xAC,0xCC,0xEB,0x32,0xCA,0x08,0x74,0xF2,0x60,0xDA,0x30,0xB3,0x50,0x29,0x88,0x6B,0xE5,0xCC,0x42,0x2E,0x07,0xB3,0x1A,0x34,0x2D,0xA9,0x1C,0xDC,0x18,0xF0,0x70,0xC9,0x72,0xF0,0x2D,0x41,0xC7,0x35,0xCA,0xC1,0x37,0x61,0x8C,0xD5,0x24,0x07,0xFE,0x36,0x94,0xA8,0xAA,0x04,0xE4,0x5B,0x13,0x22,0x1F,0x62,0xE0,0xA7,0x72,0x10,0x58,0x8A,0xA0,0x8D,0x9A,0x43,0x22,0x2A,0x06,0xB9,0x7A,0x06,0xC8,0xA2,0x18,0xBC,0x4D,0x67,0x62,0x06,0xC8,0x2D,0x02,0xC5,0x2B,0x13,0x03,0x02,0xD6,0x30,0x75,0x31,0x30,0xD5,0x95,0x61,0x64,0x24,0x4C,0x85,0x67,0x59,0xE0,0x95,0x2A,0xED,0x16,0x61,0x81,0x5B,0xCE,0x5C,0xB8,0xBB,0x17,0x71,0x2A,0xA8,0xD1,0xAC,0x6D,0xDA,0xE8,0x20,0xC7,0x41,0x49,0x4C,0x65,0x82,0x1E,0x07,0x61,0x0E,0x84,0x05,0x6E,0x2C,0x58,0x30,0x24,0x16,0xF8,0x6A,0x44,0x65,0x45,0x39,0xE0,0x95,0x29,0x6A,0x32,0xE3,0x82,0xB2,0x91,0x82,0xCA,0x9D,0x0B,0xE2,0x66,0x29,0x28,0x77,0x1E,0xC8,0x5D,0x25,0xA8,0xDC,0x78,0x60,0x54,0x07,0x83,0x7B,0xE6,0x83,0x17,0x2D,0x28,0x4D,0x89,0x0F,0x7E,0xA4,0x40,0x59,0xA1,0x01,0x0E,0x70,0x88,0x22,0xF0,0x5B,0x05,0xA4,0x36,0xC0,0xFF};
/* 안녕하세요. 정종우님. */
const uint8_t jjw[] PROGMEM = {0x00,0x00,0x00,0x29,0x63,0x62,0x4D,0xCA,0xCD,0x8C,0x4C,0xD9,0x36,0x6A,0x0F,0xD4,0x72,0x91,0x82,0xA9,0xB3,0x70,0xC8,0x41,0xAF,0xC4,0xA8,0x40,0x26,0x07,0xBD,0x16,0x5C,0x1B,0xA9,0x0C,0xEC,0x5A,0x70,0x4F,0xC5,0x32,0xF0,0xA2,0xC1,0xCA,0x13,0xCA,0xC0,0x57,0x21,0xEE,0xC5,0x28,0x03,0xF2,0x2F,0x00,0xA3,0x98,0xC4,0x82,0xD8,0x94,0x2A,0x14,0x22,0xB8,0x4A,0xB4,0x81,0x6E,0x89,0xE8,0x2A,0x95,0x21,0xC3,0x29,0x22,0x2F,0x98,0x4A,0x02,0x9B,0x18,0x3C,0x15,0xC9,0x08,0x2A,0x62,0xF0,0x23,0x21,0x27,0xA1,0x8A,0xC1,0xA9,0x01,0xCF,0x56,0x26,0x06,0xCF,0x13,0x3A,0x25,0xBB,0x14,0x1C,0x4B,0xC8,0x14,0x1A,0x72,0xD0,0xBD,0x58,0xD3,0xA8,0xD1,0xC0,0x8C,0x61,0x76,0x73,0xC4,0x00,0x5F,0x0D,0xB9,0xEC,0x22,0x13,0x7C,0x61,0xE6,0xA1,0x8A,0x4C,0xF0,0x89,0xD5,0x8A,0x2E,0xB2,0xC0,0x67,0xB0,0x08,0x39,0xC2,0x06,0x7F,0x98,0x59,0x93,0x1A,0x07,0xCC,0x0D,0x67,0x52,0x6F,0x1C,0xD0,0x26,0x83,0x51,0xB9,0x73,0x41,0xE9,0x0E,0x41,0xE6,0xDE,0x55,0x1E,0xB8,0x55,0xC6,0x94,0x9C,0x78,0xE0,0x7B,0x32,0x86,0x1D,0xE4,0x81,0xEF,0xAE,0x98,0x52,0xB1,0x8F,0x02,0xF0,0xC3,0x05,0x3D,0x0A,0x0A,0xC1,0x2F,0x15,0xB0,0x38,0x00,0x00,0xFF};

Talkie voice;

void setup() {
  Serial.begin(115200); // use the serial port
  ADCSRA = 0xe5; // set the adc to free running mode
  ADMUX = 0x40; // use adc0
  DIDR0 = 0x01; // turn off the digital input for adc0
  pinMode(inputPin, INPUT_PULLUP);
  pinMode(ledPin, OUTPUT);
}

void loop() {
  
  if (digitalRead(inputPin)==LOW){
    startTime = millis();
    digitalWrite(ledPin,HIGH);
    
    while (millis()-startTime<=1000){
       // reduces jitter
      cli();  // UDRE interrupt slows this way down on arduino1.0
      for (int i = 0 ; i < 512 ; i += 2) { // save 256 samples
        while(!(ADCSRA & 0x10)); // wait for adc to be ready
        ADCSRA = 0xf5; // restart adc
        byte m = ADCL; // fetch adc data
        byte j = ADCH;
        int k = (j << 8) | m; // form into an int
        k -= 0x0200; // form into a signed int
        k <<= 6; // form into a 16b signed int
        fft_input[i] = k; // put real data into even bins
        fft_input[i+1] = 0; // set odd bins to 0
      }
      fft_window(); // window the data for better frequency response
      fft_reorder(); // reorder the data before doing the fft
      fft_run(); // process the data in the fft
      fft_mag_log(); // take the output of the fft
      sei();
      
      for (int i=0; i < FFT_N/2; i++){
        Serial.print(fft_log_out[i]);
        if (i!=FFT_N/2 - 1) Serial.print(',');
      }
      
      Serial.print("\n");

    }
    digitalWrite(ledPin,LOW);

  }
  else{
    digitalWrite(ledPin,LOW);
  }

  if(Serial.available()>0)
  {
    int value = Serial.parseInt();
    voice.say(hello);
    
    switch(value)
    {
      case 0: 
        voice.say(khw);
        break;
      case 1: 
       voice.say(kgy);
        break;
      case 2: 
        voice.say(ljw);
        break;
      case 3: 
        voice.say(jhb);
        break;
      case 4: 
        voice.say(jkp);
        break;
      case 5: 
        voice.say(jjw);
        break;
    }

  }  
  
}
